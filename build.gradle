plugins {
    id 'java'
    id 'idea'

    // Depend on Spring Boot and add the Gradle plugin
    // https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/html/
    id 'org.springframework.boot' version "2.2.1.RELEASE"
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'

    // Linter and code formatter -- https://github.com/diffplug/spotless
    id "com.diffplug.gradle.spotless" version "3.27.1"
}

group 'com.guild.cabs'
version '1.0-SNAPSHOT'

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
    jcenter()
}

spotless {
    java {
        target '**/*.java'

        eclipse().configFile rootProject.file('jho-eclipse-formatter.xml')
        removeUnusedImports()
        trimTrailingWhitespace()
    }
}

dependencies {
    compileOnly 'com.diffplug.spotless:spotless-plugin-gradle:3.27.1'

    // @Nullable and @NotNull intellij annotations
    compileOnly 'org.jetbrains:annotations:19.0.0'
    testCompileOnly 'org.jetbrains:annotations:19.0.0'

    // Basic app set up, web server, and DB wrappers
    implementation 'org.springframework.boot:spring-boot-dependencies:2.2.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE'

    // Utilities that are helpful.
    implementation 'org.apache.commons:commons-imaging:1.0-alpha1'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'org.apache.commons:commons-text:1.8'
    implementation 'commons-io:commons-io:2.6'
    implementation 'javax.inject:javax.inject:1'
    implementation 'commons-beanutils:commons-beanutils:1.9.4'

    // Hot swaps 'n stuff
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Persistence & Hibernate
    implementation 'org.hibernate:hibernate-core:5.4.9.Final'
    implementation 'org.hibernate:hibernate-spatial:5.4.9.Final'
    implementation 'org.postgresql:postgresql:42.2.11'

    // Generates swagger docs for REST APIs
    implementation 'io.springfox:springfox-swagger2:2.5.0'
    implementation 'io.springfox:springfox-spi:2.5.0'
    implementation 'io.springfox:springfox-swagger-ui:2.5.0'
    implementation 'io.swagger:swagger-annotations:1.5.22'
    implementation('io.swagger:swagger-models') {
        version {
            strictly '1.5.22'
        }
    }

    // Testing Support
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
    testImplementation 'org.awaitility:awaitility:4.0.2'

    // DB used in testing. In-memory SQL implementation
    implementation 'com.h2database:h2:1.4.197'
    implementation 'org.orbisgis:h2gis:1.5.0'
    implementation 'com.vividsolutions:jts:1.13'

    components {
        withModule('org.springframework:spring-beans') {
            allVariants {
                withDependencyConstraints {
                    // Need to patch constraints because snakeyaml is an optional dependency
                    it.findAll { it.name == 'snakeyaml' }.each { it.version { strictly '1.19' } }
                }
            }
        }
    }
}

bootJar {
    mainClassName = 'com.guild.cabs.CabsApplication'
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
    }
}

compileJava.dependsOn 'spotlessApply'

task run(type: JavaExec) {
    group = 'Run'
    description = 'Run the server main method as an application in development mode'
    classpath sourceSets.main.runtimeClasspath
    main = 'com.guild.cabs.CabsApplication'
    systemProperty "spring.profiles.active", "development"
}